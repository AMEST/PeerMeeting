upstream peermeet-prod {
        server peer-meeting:80;
}

map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

map $http_x_forwarded_proto $thescheme {
        default $scheme;
        https https;
 }

server {
        listen 80;
        server_name _;
        return 302 https://$host$request_uri;
}

server {
        listen 443 ssl;
        server_name _;
        #ssl
        ssl_certificate      /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key  /etc/nginx/ssl/localhost.key;
        # For sample, enable compression on proxy
        gzip on;
        gzip_types      text/plain text/css application/xml application/json application/javascript image/png image/svg+xml;
        gzip_proxied    no-cache no-store private expired auth;
        gzip_min_length 1000;

        location / {
                proxy_set_header Connection "";
                proxy_set_header Accept-Encoding identity;
                proxy_connect_timeout 5;
                proxy_send_timeout 500;
                proxy_read_timeout 500;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $host:443;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $thescheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_http_version 1.1;
                proxy_set_header X-Root-Url https://$http_host/;
                proxy_pass http://peermeet-prod;
        }
}
